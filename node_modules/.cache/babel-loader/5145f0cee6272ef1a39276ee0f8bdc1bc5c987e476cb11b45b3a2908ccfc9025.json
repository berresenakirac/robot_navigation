{"ast":null,"code":"// import { Component } from \"react\";\n// import  {Button } from \"react-bootstrap\";\n\n// class Connection extends Component{\n//     state={};\n//     render(){\n//         return (<h2>Connection</h2>);\n\n//     }\n// }\n// export default Connection;\n\n// ---->ROSLIB Dependences<----\n\n// import { Component } from \"react\";\n\n// class Connection extends Component{\n//     state={};\n//     init_connection(){\n//         var ros=new window.ROSLIB.Ros();\n//     }\n\n//     render(){\n//         return (<h2>Connection</h2>);\n\n//     }\n// }\n// export default Connection;\n\n// ----->Alert Component<-----\n\n// import { Component } from \"react\";\n// import { Alert } from \"react-bootstrap\";\n\n// class Connection extends Component{\n//     state={connected: true};\n//     init_connection(){\n//         var ros=new window.ROSLIB.Ros();\n//     }\n\n//     render(){ \n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//         );\n\n//     }\n// }\n// export default Connection;\n\n// ---->Connection Logic with ROSLib and React State<----\n// import { Component } from \"react\";\n// import Alert from \"react-bootstrap/Alert\";\n// class Connection extends Component{\n//     state={connected: false, ros:null};\n\n//     constructor(){\n//         super();\n//         this.init_connection();\n// }\n\n//     init_connection() {\n//         this.state.ros= new window.ROSLIB.Ros();\n//         console.log(this.state.ros);\n//         this.state.ros.on(\"connection\", ()=>{\n//             console.log(\"conneciton established:\");\n//             this.state.connected=true;\n//             this.setState({connected: true});\n//         });\n\n//         this.state.ros.on(\"close\",()=>{\n//             console.log(\"connection is closed!\");\n//             this.setState({connected: false});\n\n//             //try to reconnect every 3 seconds\n//             setTimeout(()=> { \n//                 try{\n//                     this.state.ros.connect(\"ws://192.168.2.8:9090\");\n//                 }   catch(error){\n//                     console.log(\"connection problem!\");\n//                 }\n//              }, 3000);\n//      });\n\n//          try{\n//             this.state.ros.connect(\"ws://192.168.2.8:9090\");\n//         }   catch(error){\n//             console.log(\"connection problem!\");\n//         }\n//     }\n\n//     render(){\n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//     );\n//     }\n// }\n\n// export default Connection;\n\n// ---->Clean code and use configuration file<----\n// import { Component } from \"react\";\n// import Alert from \"react-bootstrap/Alert\";\n// import  Config  from \"../scripts/config\";\n// class Connection extends Component{\n//     state={connected: false, ros:null};\n\n//     constructor(){\n//         super();\n//         this.init_connection();\n// }\n\n//     init_connection() {\n//         this.state.ros= new window.ROSLIB.Ros();\n//         // this.setState(prevState => ({\n//         //     ros:new window.ROSLIB.Ros()\n//         // }));\n//         console.log(this.state.ros);\n\n//         this.state.ros.on(\"connection\", ()=>{\n//             console.log(\"conneciton established:\");\n//             this.setState({connected:true});\n//         });\n\n//         this.state.ros.on(\"close\",()=>{\n//             console.log(\"connection is closed!\");\n//             this.setState({connected: false});\n\n//             //try to reconnect every 3 seconds\n//             setTimeout(()=> { \n//                 try{\n//                     this.state.ros.connect(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n//                     \":\"+\n//                     Config.ROSBRIGDE_SERVER_PORT);\n//                 }   catch(error){\n//                     console.log(\"connection problem!\");\n//                 }\n//              }, Config.RECONNECTION_TIMER);\n//      });\n\n//          try{\n//             this.state.ros.connect(\"ws:\"+Config.ROSBRIGDE_SERVER_IP+\n//             \":\"+\n//             Config.ROSBRIGDE_SERVER_PORT);\n//         }   catch(error){\n//             console.log(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n//             \":\"+\n//             Config.ROSBRIGDE_SERVER_PORT);\n//             console.log(\"connection problem!\");\n//         }\n//     }\n\n//     render(){\n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//     );\n//     }\n// }\n\n// export default Connection;","map":{"version":3,"names":[],"sources":["/home/nurkan/react-ros-robot/src/components/Connection.jsx"],"sourcesContent":["// import { Component } from \"react\";\n// import  {Button } from \"react-bootstrap\";\n\n// class Connection extends Component{\n//     state={};\n//     render(){\n//         return (<h2>Connection</h2>);\n\n//     }\n// }\n// export default Connection;\n\n\n\n// ---->ROSLIB Dependences<----\n\n// import { Component } from \"react\";\n\n// class Connection extends Component{\n//     state={};\n//     init_connection(){\n//         var ros=new window.ROSLIB.Ros();\n//     }\n\n\n//     render(){\n//         return (<h2>Connection</h2>);\n\n//     }\n// }\n// export default Connection;\n\n\n\n// ----->Alert Component<-----\n\n// import { Component } from \"react\";\n// import { Alert } from \"react-bootstrap\";\n\n// class Connection extends Component{\n//     state={connected: true};\n//     init_connection(){\n//         var ros=new window.ROSLIB.Ros();\n//     }\n\n\n//     render(){ \n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//         );\n\n//     }\n// }\n// export default Connection;\n\n\n// ---->Connection Logic with ROSLib and React State<----\n// import { Component } from \"react\";\n// import Alert from \"react-bootstrap/Alert\";\n// class Connection extends Component{\n//     state={connected: false, ros:null};\n\n//     constructor(){\n//         super();\n//         this.init_connection();\n// }\n    \n//     init_connection() {\n//         this.state.ros= new window.ROSLIB.Ros();\n//         console.log(this.state.ros);\n//         this.state.ros.on(\"connection\", ()=>{\n//             console.log(\"conneciton established:\");\n//             this.state.connected=true;\n//             this.setState({connected: true});\n//         });\n\n//         this.state.ros.on(\"close\",()=>{\n//             console.log(\"connection is closed!\");\n//             this.setState({connected: false});\n\n//             //try to reconnect every 3 seconds\n//             setTimeout(()=> { \n//                 try{\n//                     this.state.ros.connect(\"ws://192.168.2.8:9090\");\n//                 }   catch(error){\n//                     console.log(\"connection problem!\");\n//                 }\n//              }, 3000);\n//      });\n\n//          try{\n//             this.state.ros.connect(\"ws://192.168.2.8:9090\");\n//         }   catch(error){\n//             console.log(\"connection problem!\");\n//         }\n//     }\n        \n\n\n//     render(){\n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//     );\n//     }\n// }\n\n// export default Connection;\n\n\n// ---->Clean code and use configuration file<----\n// import { Component } from \"react\";\n// import Alert from \"react-bootstrap/Alert\";\n// import  Config  from \"../scripts/config\";\n// class Connection extends Component{\n//     state={connected: false, ros:null};\n\n//     constructor(){\n//         super();\n//         this.init_connection();\n// }\n    \n//     init_connection() {\n//         this.state.ros= new window.ROSLIB.Ros();\n//         // this.setState(prevState => ({\n//         //     ros:new window.ROSLIB.Ros()\n//         // }));\n//         console.log(this.state.ros);\n\n//         this.state.ros.on(\"connection\", ()=>{\n//             console.log(\"conneciton established:\");\n//             this.setState({connected:true});\n//         });\n\n//         this.state.ros.on(\"close\",()=>{\n//             console.log(\"connection is closed!\");\n//             this.setState({connected: false});\n\n//             //try to reconnect every 3 seconds\n//             setTimeout(()=> { \n//                 try{\n//                     this.state.ros.connect(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n//                     \":\"+\n//                     Config.ROSBRIGDE_SERVER_PORT);\n//                 }   catch(error){\n//                     console.log(\"connection problem!\");\n//                 }\n//              }, Config.RECONNECTION_TIMER);\n//      });\n\n//          try{\n//             this.state.ros.connect(\"ws:\"+Config.ROSBRIGDE_SERVER_IP+\n//             \":\"+\n//             Config.ROSBRIGDE_SERVER_PORT);\n//         }   catch(error){\n//             console.log(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n//             \":\"+\n//             Config.ROSBRIGDE_SERVER_PORT);\n//             console.log(\"connection problem!\");\n//         }\n//     }\n        \n\n\n//     render(){\n//         return (\n//             <div>\n//                 <Alert className=\"text-center m-3\"variant={this.state.connected? \"success\":\"danger\"}> \n//                     {this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}</Alert>     \n//             </div>\n//     );\n//     }\n// }\n\n// export default Connection;\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}