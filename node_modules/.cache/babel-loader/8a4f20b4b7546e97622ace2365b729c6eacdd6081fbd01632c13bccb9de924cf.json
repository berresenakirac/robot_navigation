{"ast":null,"code":"var _jsxFileName = \"/home/berre/Downloads/react_demo/src/components/WaypointForm.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WaypointForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ros: null\n    };\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: parseFloat(value)\n      }); // x, y ve z değerlerini float'a çeviriyor.\n    };\n    this.handleSubmit = event => {\n      event.preventDefault(); //burada veri kaydedilip işlenirken yani ROS ile iletişim sağlanırken sayfanın yenilenmesi engelleniyor.\n      const {\n        x,\n        y,\n        z\n      } = this.state; //altta kaydedilen veriler x y z olarak alınıyor.\n      // Twist mesajını oluşturulup ve ROS'a gönderiliyor.\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: x,\n          y: y,\n          z: z\n        },\n        angular: {\n          x: 0,\n          y: 0,\n          z: 0\n        }\n      });\n      const cmd_vel = new window.ROSLIB.Topic({\n        ros: this.props.ros,\n        name: \"cmd_vel\",\n        // \"cmd_vel\" topic'i adını kullanın\n        messageType: \"geometry_msgs/Twist\"\n      });\n      cmd_vel.publish(twist);\n    };\n    this.state = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"connection problem \");\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"X:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"x\",\n          value: this.state.x,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Y:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"y\",\n          value: this.state.y,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Z:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"z\",\n          value: this.state.z,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Hareket Et\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default WaypointForm;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","WaypointForm","constructor","props","state","ros","handleChange","event","name","value","target","setState","parseFloat","handleSubmit","preventDefault","x","y","z","twist","window","ROSLIB","Message","linear","angular","cmd_vel","Topic","messageType","publish","init_connection","Ros","console","log","on","connected","setTimeout","connect","Config","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","render","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/berre/Downloads/react_demo/src/components/WaypointForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass WaypointForm extends Component {\n\n  state = { ros: null };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: 0,\n      y: 0,\n      z: 0,\n    };\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({ connected: false });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n      console.log(\"connection problem \");\n    }\n  }\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: parseFloat(value) }); // x, y ve z değerlerini float'a çeviriyor.\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();//burada veri kaydedilip işlenirken yani ROS ile iletişim sağlanırken sayfanın yenilenmesi engelleniyor.\n    const { x, y, z } = this.state;//altta kaydedilen veriler x y z olarak alınıyor.\n    // Twist mesajını oluşturulup ve ROS'a gönderiliyor.\n    const twist = new window.ROSLIB.Message({\n      linear: {\n        x: x,\n        y: y,\n        z: z,\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0,\n      },\n    });\n    const cmd_vel = new window.ROSLIB.Topic({\n      ros: this.props.ros,\n      name: \"cmd_vel\", // \"cmd_vel\" topic'i adını kullanın\n      messageType: \"geometry_msgs/Twist\",\n    });\n    cmd_vel.publish(twist);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          X:\n          <input\n            type=\"number\"\n            name=\"x\"\n            value={this.state.x}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Y:\n          <input\n            type=\"number\"\n            name=\"y\"\n            value={this.state.y}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Z:\n          <input\n            type=\"number\"\n            name=\"z\"\n            value={this.state.z}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Hareket Et</button>\n      </form>\n    );\n  }\n}\n\nexport default WaypointForm;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,SAASH,SAAS,CAAC;EAInCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAHfC,KAAK,GAAG;MAAEC,GAAG,EAAE;IAAK,CAAC;IAAA,KA0DrBC,YAAY,GAAIC,KAAK,IAAK;MACxB,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;MACpC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACH,IAAI,GAAGI,UAAU,CAACH,KAAK;MAAE,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAAA,KAEDI,YAAY,GAAIN,KAAK,IAAK;MACxBA,KAAK,CAACO,cAAc,CAAC,CAAC,CAAC;MACvB,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAG,IAAI,CAACb,KAAK,CAAC;MAC/B;MACA,MAAMc,KAAK,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC;QACtCC,MAAM,EAAE;UACNP,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA;QACL,CAAC;QACDM,OAAO,EAAE;UACPR,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE;QACL;MACF,CAAC,CAAC;MACF,MAAMO,OAAO,GAAG,IAAIL,MAAM,CAACC,MAAM,CAACK,KAAK,CAAC;QACtCpB,GAAG,EAAE,IAAI,CAACF,KAAK,CAACE,GAAG;QACnBG,IAAI,EAAE,SAAS;QAAE;QACjBkB,WAAW,EAAE;MACf,CAAC,CAAC;MACFF,OAAO,CAACG,OAAO,CAACT,KAAK,CAAC;IACxB,CAAC;IAjFC,IAAI,CAACd,KAAK,GAAG;MACXW,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC;EACH;EACAW,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACxB,KAAK,CAACC,GAAG,GAAG,IAAIc,MAAM,CAACC,MAAM,CAACS,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC3B,KAAK,CAACC,GAAG,CAAC;IAE3B,IAAI,CAACD,KAAK,CAACC,GAAG,CAAC2B,EAAE,CAAC,YAAY,EAAE,MAAM;MACpCF,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjED,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC3B,KAAK,CAACC,GAAG,CAAC;MAC3B,IAAI,CAACM,QAAQ,CAAC;QAAEsB,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAAC7B,KAAK,CAACC,GAAG,CAAC2B,EAAE,CAAC,OAAO,EAAE,MAAM;MAC/BF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACpB,QAAQ,CAAC;QAAEsB,SAAS,EAAE;MAAM,CAAC,CAAC;MACnC;MACAC,UAAU,CAAC,MAAM;QACf,IAAI;UACF,IAAI,CAAC9B,KAAK,CAACC,GAAG,CAAC8B,OAAO,CACpB,OAAO,GACLC,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;QACH,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC;MACF,CAAC,EAAEK,MAAM,CAACI,kBAAkB,CAAC;IAC/B,CAAC,CAAC;IAEF,IAAI;MACF,IAAI,CAACpC,KAAK,CAACC,GAAG,CAAC8B,OAAO,CACpB,OAAO,GACLC,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CACT,OAAO,GACLK,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;MACDR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;EACF;EA8BAU,MAAMA,CAAA,EAAG;IACP,oBACEzC,OAAA;MAAM0C,QAAQ,EAAE,IAAI,CAAC7B,YAAa;MAAA8B,QAAA,gBAChC3C,OAAA;QAAA2C,QAAA,GAAO,IAEL,eAAA3C,OAAA;UACE4C,IAAI,EAAC,QAAQ;UACbpC,IAAI,EAAC,GAAG;UACRC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACW,CAAE;UACpB8B,QAAQ,EAAE,IAAI,CAACvC;QAAa;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjD,OAAA;QAAA2C,QAAA,GAAO,IAEL,eAAA3C,OAAA;UACE4C,IAAI,EAAC,QAAQ;UACbpC,IAAI,EAAC,GAAG;UACRC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACY,CAAE;UACpB6B,QAAQ,EAAE,IAAI,CAACvC;QAAa;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjD,OAAA;QAAA2C,QAAA,GAAO,IAEL,eAAA3C,OAAA;UACE4C,IAAI,EAAC,QAAQ;UACbpC,IAAI,EAAC,GAAG;UACRC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACa,CAAE;UACpB4B,QAAQ,EAAE,IAAI,CAACvC;QAAa;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjD,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEX;AACF;AAEA,eAAehD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}