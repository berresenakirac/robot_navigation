{"ast":null,"code":"var _jsxFileName = \"/home/nurkan/react-ros-robot/src/components/RobotState.jsx\";\nimport React, { Component } from \"react\";\nimport { Rov, Coli, Container, Button, Row } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RobotState extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      x: 0,\n      y: 0,\n      orientation: 0,\n      linear_velocity: 0,\n      angular_velocity: 0\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    // this.setState(prevState => ({\n    //     ros:new window.ROSLIB.Ros()\n    // }));\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"conneciton established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      // this.state.connected=true;\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({\n        connected: false\n      });\n\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIGDE_SERVER_IP + \":\" + Config.ROSBRIGDE_SERVER_PORT);\n        } catch (error) {\n          console.log(\"connection problem!\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws:\" + Config.ROSBRIGDE_SERVER_IP + \":\" + Config.ROSBRIGDE_SERVER_PORT);\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIGDE_SERVER_IP + \":\" + Config.ROSBRIGDE_SERVER_PORT);\n      console.log(\"connection problem!\");\n    }\n  }\n  //execute to getRobotState\n  componentDidMount() {\n    this.getRobotState();\n  }\n  getRobotState() {\n    //create a pose subscriber\n    pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/amcl_pose\",\n      messageType: \"geometry_msgs/PoseWithCovarianceStamped\" //rostopic info amcl_pose\n    });\n\n    //create  a pose callback\n    pose_subscriber.subscribe(message => {\n      this.setState({\n        x: message.pose.pose.position.x\n      });\n      this.setState({\n        y: message.pose.pose.position.y\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"col\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \" Position \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"x: \", this.state.x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"y: \", this.state.y]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\":Orientation \", this.state.orientation, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"col\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \" Velocities \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\" Angular Velecities:\", this.state.linear_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"y: Linear Velecities:\", this.state.angular_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RobotState;","map":{"version":3,"names":["React","Component","Rov","Coli","Container","Button","Row","Config","jsxDEV","_jsxDEV","RobotState","constructor","state","ros","x","y","orientation","linear_velocity","angular_velocity","init_connection","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIGDE_SERVER_IP","ROSBRIGDE_SERVER_PORT","error","RECONNECTION_TIMER","componentDidMount","getRobotState","pose_subscriber","Topic","name","messageType","subscribe","message","pose","position","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/nurkan/react-ros-robot/src/components/RobotState.jsx"],"sourcesContent":["import React , {Component} from \"react\";\nimport {Rov,Coli,Container,Button, Row} from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nclass RobotState extends Component {\n    state={\n        ros: null,\n        x:0,\n        y:0,\n        orientation:0,\n        linear_velocity:0,\n        angular_velocity:0,\n    };\n\n    constructor(){\n        super();\n        this.init_connection();\n    }\n    init_connection() {\n        this.state.ros= new window.ROSLIB.Ros();\n        // this.setState(prevState => ({\n        //     ros:new window.ROSLIB.Ros()\n        // }));\n        console.log(this.state.ros);\n    \n        this.state.ros.on(\"connection\", ()=>{\n            console.log(\"conneciton established in Teleoperation Component!\");\n            console.log(this.state.ros);\n            // this.state.connected=true;\n            this.setState({connected: true});\n        });\n    \n        this.state.ros.on(\"close\",()=>{\n            console.log(\"connection is closed!\");\n            this.setState({connected: false});\n    \n            //try to reconnect every 3 seconds\n            setTimeout(()=> { \n                try{\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n                    \":\"+\n                    Config.ROSBRIGDE_SERVER_PORT);\n                }   catch(error){\n                    console.log(\"connection problem!\");\n                }\n             }, Config.RECONNECTION_TIMER);\n     });\n    \n         try{\n            this.state.ros.connect(\"ws:\"+Config.ROSBRIGDE_SERVER_IP+\n            \":\"+\n            Config.ROSBRIGDE_SERVER_PORT);\n        }   catch(error){\n            console.log(\"ws://\"+Config.ROSBRIGDE_SERVER_IP+\n            \":\"+\n            Config.ROSBRIGDE_SERVER_PORT);\n            console.log(\"connection problem!\");\n        }\n    }\n //execute to getRobotState\n    componentDidMount(){\n        this.getRobotState();\n    }\n\n    getRobotState() {\n        //create a pose subscriber\n        pose_subscriber=new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name:\"/amcl_pose\",\n            messageType:\"geometry_msgs/PoseWithCovarianceStamped\",  //rostopic info amcl_pose\n        });\n\n        //create  a pose callback\n        pose_subscriber.subscribe((message) => {\n            this.setState({x: message.pose.pose.position.x});\n            this.setState({y: message.pose.pose.position.y});\n        });\n    }\n    render() {\n        return(\n            <div>\n    <Row>\n            <col>\n            <h4 className=\"mt-4\"> Position </h4>\n            <p className=\"mt-0\">x: {this.state.x}</p>\n            <p className=\"mt-0\">y: {this.state.y}</p>\n            <p className=\"mt-0\">:Orientation {this.state.orientation} </p>\n            </col>\n    </Row>\n            <Row>\n            <col>\n            <h4 className=\"mt-4\"> Velocities </h4>\n            <p className=\"mt-0\"> Angular Velecities:\n                 {this.state.linear_velocity}</p>\n            <p className=\"mt-0\">y: Linear Velecities:\n                {this.state.angular_velocity}</p>\n            </col>             \n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default RobotState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}