{"ast":null,"code":"var _jsxFileName = \"/home/berre/Desktop/react_demo/src/components/Connection.jsx\";\nimport React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: false,\n      ros: null\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"connection problem \");\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"text-center m-3\",\n        variant: this.state.connected ? \"success\" : \"danger\",\n        children: this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Connection;","map":{"version":3,"names":["React","Component","Alert","Config","jsxDEV","_jsxDEV","Connection","constructor","state","connected","ros","init_connection","window","ROSLIB","Ros","console","log","on","setState","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","render","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/berre/Desktop/react_demo/src/components/Connection.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/config\";\nclass Connection extends Component {\n  state = { connected: false, ros: null };\n\n  constructor() {\n    super();\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established!\");\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({ connected: false });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n      console.log(\"connection problem \");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Alert\n          className=\"text-center m-3\"\n          variant={this.state.connected ? \"success\" : \"danger\"}\n        >\n          {this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default Connection;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,UAAU,SAASL,SAAS,CAAC;EAGjCM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAHVC,KAAK,GAAG;MAAEC,SAAS,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAK,CAAC;IAIrC,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB;EAEAA,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACH,KAAK,CAACE,GAAG,GAAG,IAAIE,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAACE,GAAG,CAAC;IAE3B,IAAI,CAACF,KAAK,CAACE,GAAG,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;MACpCF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI,CAACE,QAAQ,CAAC;QAAET,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACD,KAAK,CAACE,GAAG,CAACO,EAAE,CAAC,OAAO,EAAE,MAAM;MAC/BF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACE,QAAQ,CAAC;QAAET,SAAS,EAAE;MAAM,CAAC,CAAC;MACnC;MACAU,UAAU,CAAC,MAAM;QACf,IAAI;UACF,IAAI,CAACX,KAAK,CAACE,GAAG,CAACU,OAAO,CACpB,OAAO,GACLjB,MAAM,CAACkB,mBAAmB,GAC1B,GAAG,GACHlB,MAAM,CAACmB,qBAAqB,GAC5B,EACJ,CAAC;QACH,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC;MACF,CAAC,EAAEb,MAAM,CAACqB,kBAAkB,CAAC;IAC/B,CAAC,CAAC;IAEF,IAAI;MACF,IAAI,CAAChB,KAAK,CAACE,GAAG,CAACU,OAAO,CACpB,OAAO,GACLjB,MAAM,CAACkB,mBAAmB,GAC1B,GAAG,GACHlB,MAAM,CAACmB,qBAAqB,GAC5B,EACJ,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACC,GAAG,CACT,OAAO,GACLb,MAAM,CAACkB,mBAAmB,GAC1B,GAAG,GACHlB,MAAM,CAACmB,qBAAqB,GAC5B,EACJ,CAAC;MACDP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;EACF;EAEAS,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA;MAAAqB,QAAA,eACErB,OAAA,CAACH,KAAK;QACJyB,SAAS,EAAC,iBAAiB;QAC3BC,OAAO,EAAE,IAAI,CAACpB,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,QAAS;QAAAiB,QAAA,EAEpD,IAAI,CAAClB,KAAK,CAACC,SAAS,GAAG,iBAAiB,GAAG;MAAoB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV;AACF;AAEA,eAAe1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}